# 网络请求 （RxJava + Retrofit + Okhttp）

 封装 RxRequest 作为获取网络数据的唯一接口。

 * 如果后期有需要，可以通过 OkHttp 进行 Cookie 的处理；
 * Error 的统一分类处理；
 * 绑定视图的生命周期进行请求；

 1. RxRequest 接口统一返回的字段格式，在接收 Response 时，json 可以统一解析；（后期如果返回格式不一致，可以使用泛型扩展）

 2. RxRequest 在网络请求中，与 Activity / Fragment 生命周期绑定；

    在 Tab 切换时，Fragment onDestroy 后自动取消网络请求的绑定，所以在 Fragment 初始第一次加载数据时，如果异步过程还未返回数据，
    则设置数据加载是否成功的 flag 标记任然为 false，只有回调 onSuccess 时, flag 设置为 true。
    如果下次再次切换 Tab，flag == false 则再次去请求数据，并绑定视图，不至于一片空白。

3. RxRequest 统一进行错误分类和处理

    如果 Http 错误（自动重试请求2次），如果任然错误或者自定义的错误都可以捕捉，然后显示错误视图，可以点击重试，继续请求；
    比如加载数据超时，或者无网络情况直接显示错误视图，可以点击重试；

# UI 结构（一个Activity + 多个Fragment 通过 TabLayout 切换）

 1. 数据太多，不宜在内存存储过多数据，所以使用 FragmentStatePagerAdatper 适配器，切换不相邻的 Tab 时，会删除 Fragment 实例对象，包括视图，
    但是会保留 Fragment 的 View 视图，再次切换回来时，能恢复保留的 View 视图

 2. Fragment 只在用户可见，可操作时候才去加载数据，否则取消请求

    如果第一次数据返回太慢，下次切回来还是任然会自动请求；如果数据返回成功，则下次切回来不自动去加载新数据，
    除非用户下拉刷新，或者上拉加载

 3. Fragment 非 View 结构的成员变量的数据保存与恢复

    TODO FragmentStatePagerAdapter 是否需要自己手动保存成员变量？

# 关于列表 （RecyclerView 数据与视图分离，通过 Adapter 作为桥梁进行绑定）

 1. 列表后期扩展可以显示不同的类型，例如头部可以添加一个 Banner 横向的轮播图；

 2. 分页加载 加载更多的视图与逻辑处理

    可以自己选择是否加载更多数据，比如一次性加载20条数据，但服务器返回了10条数据，则不需要开启加载更多的开关；

    拥有 空视图、错误视图、正常列表视图、滑动到底部时候显示的加载更多视图、下拉到最底部的End视图

 3. 下拉刷新，请求 pager = 1 的数据

 4. 可扩展的滑动动画

# Glide 图片加载

